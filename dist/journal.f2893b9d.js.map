{"mappings":"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","sources":["<anon>","src/journal.js"],"sourcesContent":["var $3f1f9ca194e3a672$exports = {};\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const container2 = document.getElementById(\"container-2\");\n    const favorites = JSON.parse(localStorage.getItem(\"favorites\")) || [];\n    if (favorites.length === 0) container2.innerHTML = \"<p class='text-gray-500 text-center w-full'>No favorite Pok\\xe9mon yet!</p>\";\n    else favorites.forEach((pokemon)=>{\n        const pokemonCard = document.createElement(\"div\");\n        pokemonCard.className = \"border-2 h-80 border-orange-500 w-72 m-3 p-3 flex flex-col items-center\";\n        const noteInputId = `note-${pokemon.name}`;\n        const addButtonId = `addnote-${pokemon.name}`;\n        const ulId = `ul-${pokemon.name}`;\n        pokemonCard.innerHTML = `\r\n      <div class=\"overflow-auto text-center flex items-center justify-center flex-col\"> \r\n        <img src=\"${pokemon.sprite}\" alt=\"${pokemon.name}\" class=\"h-40 w-40 object-contain mb-4\">\r\n        <h2 class=\"text-xl capitalize font-bold text-orange-500\">${pokemon.name}</h2>\r\n        <p class=\"mt-2\">Height: ${pokemon.height}</p>\r\n        <p>Weight: ${pokemon.weight}</p>  \r\n        <input type=\"text\" maxlength=\"25\" class=\"border-2 border-orange-400 p-1 m-1 rounded-md\" id=\"${noteInputId}\" />\r\n        <button id=\"${addButtonId}\" class=\"border-solid border-2 border-orange-500 m-1 p-1 rounded-md\">Add Note</button>\r\n        <ul id=\"${ulId}\"></ul>\r\n      </div>\r\n      `;\n        container2.appendChild(pokemonCard);\n        const input = document.getElementById(noteInputId);\n        const button = document.getElementById(addButtonId);\n        const ul = document.getElementById(ulId);\n        let texts = localStorage.getItem(`text-${pokemon.name}`) ? gettexts(pokemon.name) : [];\n        texts.forEach((note)=>addNoteToCard(note, ul, pokemon.name));\n        button.addEventListener(\"click\", ()=>{\n            const text = input.value.trim();\n            if (text) {\n                addNoteToCard(text, ul, pokemon.name);\n                input.value = \"\";\n            }\n        });\n        ul.addEventListener(\"click\", (e)=>{\n            if (e.target.tagName === \"BUTTON\") {\n                const noteElement = e.target.parentElement;\n                const text = noteElement.firstChild.textContent;\n                removeText(text, pokemon.name);\n                ul.removeChild(noteElement);\n            }\n        });\n        function addNoteToCard(text, ulElement, pokemonName) {\n            const note = createNoteElement(text);\n            const deleteButton = createDeleteButtonElement();\n            note.appendChild(deleteButton);\n            ulElement.appendChild(note);\n            saveText(text, pokemonName);\n        }\n        function createNoteElement(text) {\n            const li = document.createElement(\"li\");\n            li.textContent = text;\n            return li;\n        }\n        function createDeleteButtonElement() {\n            const button = document.createElement(\"button\");\n            button.classList.add(\"border-2\", \"border-orange-400\", \"p-1\", \"m-1\", \"hover:bg-red-400\", \"ml\", \"rounded-md\");\n            button.textContent = \"Delete\";\n            return button;\n        }\n        function saveText(text, pokemonName) {\n            if (!texts.includes(text)) {\n                texts.push(text);\n                localStorage.setItem(`text-${pokemonName}`, JSON.stringify(texts));\n            }\n        }\n        function gettexts(pokemonName) {\n            try {\n                const storedTexts = JSON.parse(localStorage.getItem(`text-${pokemonName}`));\n                return Array.isArray(storedTexts) ? storedTexts : [];\n            } catch (error) {\n                console.error(\"Failed to parse text from localStorage\", error);\n                return [];\n            }\n        }\n        function removeText(text, pokemonName) {\n            const index = texts.indexOf(text);\n            if (index !== -1) {\n                texts.splice(index, 1);\n                localStorage.setItem(`text-${pokemonName}`, JSON.stringify(texts));\n            }\n        }\n    });\n});\n\n\n//# sourceMappingURL=journal.f2893b9d.js.map\n","document.addEventListener(\"DOMContentLoaded\", () => {\r\n  const container2 = document.getElementById(\"container-2\");\r\n\r\n  const favorites = JSON.parse(localStorage.getItem(\"favorites\")) || [];\r\n\r\n  if (favorites.length === 0) {\r\n    container2.innerHTML =\r\n      \"<p class='text-gray-500 text-center w-full'>No favorite Pok√©mon yet!</p>\";\r\n  } else {\r\n    favorites.forEach((pokemon) => {\r\n      const pokemonCard = document.createElement(\"div\");\r\n      pokemonCard.className =\r\n        \"border-2 h-80 border-orange-500 w-72 m-3 p-3 flex flex-col items-center\";\r\n\r\n      const noteInputId = `note-${pokemon.name}`;\r\n      const addButtonId = `addnote-${pokemon.name}`;\r\n      const ulId = `ul-${pokemon.name}`;\r\n\r\n      pokemonCard.innerHTML = `\r\n      <div class=\"overflow-auto text-center flex items-center justify-center flex-col\"> \r\n        <img src=\"${pokemon.sprite}\" alt=\"${pokemon.name}\" class=\"h-40 w-40 object-contain mb-4\">\r\n        <h2 class=\"text-xl capitalize font-bold text-orange-500\">${pokemon.name}</h2>\r\n        <p class=\"mt-2\">Height: ${pokemon.height}</p>\r\n        <p>Weight: ${pokemon.weight}</p>  \r\n        <input type=\"text\" maxlength=\"25\" class=\"border-2 border-orange-400 p-1 m-1 rounded-md\" id=\"${noteInputId}\" />\r\n        <button id=\"${addButtonId}\" class=\"border-solid border-2 border-orange-500 m-1 p-1 rounded-md\">Add Note</button>\r\n        <ul id=\"${ulId}\"></ul>\r\n      </div>\r\n      `;\r\n\r\n      container2.appendChild(pokemonCard);\r\n\r\n      const input = document.getElementById(noteInputId);\r\n      const button = document.getElementById(addButtonId);\r\n      const ul = document.getElementById(ulId);\r\n\r\n      let texts = localStorage.getItem(`text-${pokemon.name}`)\r\n        ? gettexts(pokemon.name)\r\n        : [];\r\n\r\n      texts.forEach((note) => addNoteToCard(note, ul, pokemon.name));\r\n\r\n      button.addEventListener(\"click\", () => {\r\n        const text = input.value.trim();\r\n        if (text) {\r\n          addNoteToCard(text, ul, pokemon.name);\r\n          input.value = \"\";\r\n        }\r\n      });\r\n\r\n      ul.addEventListener(\"click\", (e) => {\r\n        if (e.target.tagName === \"BUTTON\") {\r\n          const noteElement = e.target.parentElement;\r\n          const text = noteElement.firstChild.textContent;\r\n          removeText(text, pokemon.name);\r\n          ul.removeChild(noteElement);\r\n        }\r\n      });\r\n\r\n      function addNoteToCard(text, ulElement, pokemonName) {\r\n        const note = createNoteElement(text);\r\n        const deleteButton = createDeleteButtonElement();\r\n        note.appendChild(deleteButton);\r\n        ulElement.appendChild(note);\r\n        saveText(text, pokemonName);\r\n      }\r\n\r\n      function createNoteElement(text) {\r\n        const li = document.createElement(\"li\");\r\n        li.textContent = text;\r\n        return li;\r\n      }\r\n\r\n      function createDeleteButtonElement() {\r\n        const button = document.createElement(\"button\");\r\n        button.classList.add(\r\n          \"border-2\",\r\n          \"border-orange-400\",\r\n          \"p-1\",\r\n          \"m-1\",\r\n          \"hover:bg-red-400\",\r\n          \"ml\",\r\n          \"rounded-md\"\r\n        );\r\n        button.textContent = \"Delete\";\r\n        return button;\r\n      }\r\n\r\n      function saveText(text, pokemonName) {\r\n        if (!texts.includes(text)) {\r\n          texts.push(text);\r\n          localStorage.setItem(`text-${pokemonName}`, JSON.stringify(texts));\r\n        }\r\n      }\r\n\r\n      function gettexts(pokemonName) {\r\n        try {\r\n          const storedTexts = JSON.parse(\r\n            localStorage.getItem(`text-${pokemonName}`)\r\n          );\r\n          return Array.isArray(storedTexts) ? storedTexts : [];\r\n        } catch (error) {\r\n          console.error(\"Failed to parse text from localStorage\", error);\r\n          return [];\r\n        }\r\n      }\r\n\r\n      function removeText(text, pokemonName) {\r\n        const index = texts.indexOf(text);\r\n        if (index !== -1) {\r\n          texts.splice(index, 1);\r\n          localStorage.setItem(`text-${pokemonName}`, JSON.stringify(texts));\r\n        }\r\n      }\r\n    });\r\n  }\r\n});\r\n"],"names":["document","addEventListener","container2","getElementById","favorites","JSON","parse","localStorage","getItem","length","innerHTML","forEach","pokemon","pokemonCard","createElement","className","noteInputId","name","addButtonId","ulId","sprite","height","weight","appendChild","input","button","ul","texts","gettexts","pokemonName","storedTexts","Array","isArray","error","console","addNoteToCard","text","ulElement","note","createNoteElement","li","textContent","deleteButton","createDeleteButtonElement","classList","add","includes","push","setItem","stringify","value","trim","e","target","tagName","noteElement","parentElement","removeText","index","indexOf","splice","firstChild","removeChild"],"version":3,"file":"journal.f2893b9d.js.map"}